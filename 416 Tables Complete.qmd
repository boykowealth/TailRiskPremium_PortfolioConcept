![](images/clipboard-1227717430.png)

---
title: "FIN 416 Tables"
author: "Andrew Pettifor"
format: html
editor: visual
---

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(readr)
library(tidyverse)
library(tidyr)
library(tidyselect)
library(stats)
library(PerformanceAnalytics)
library(xts)
library(gt)
library(RTL)
library(plotly)
library(ggplot2)
library(arrow)
library(patchwork)
library(tidyquant)
library(scales)
library(ggridges)
library(viridis)
library(forcats)
library(scales)
library(lubridate)
library(stats)
library(broom)
library(gt)
library(car)
library(GGally)
library(rlang)
library(glue)
library(purrr)
library(ggfortify)
library(ggpmisc)
library(devtools)

library(dplyr)
library(tidyr)

```

```{r echo=FALSE}

original_df <- read.csv("https://raw.githubusercontent.com/boykowealth/TailRiskPremium_PortfolioConcept/refs/heads/main/RetVolSkew_Monthly.csv")

port_df_long <- original_df %>% 
  select(DATE, PORTFOLIO, RET, IVOL, SKEW) 
  

port_df_wide <- port_df_long %>% 
  pivot_wider(names_from = PORTFOLIO, values_from = c(RET,IVOL,SKEW))

port_returns_wide <- port_df_wide %>% 
  select(DATE,RET_LongPosV1,RET_LongPosV2,RET_ShortPosV1,RET_ShortPosV2) %>% 
  mutate(RET_V1_Combined = RET_LongPosV1+RET_ShortPosV1) %>% 
  mutate(RET_V2_Combined = RET_LongPosV2 + RET_ShortPosV2)

return_columns <- grep("RET", names(port_returns_wide), value = TRUE)

port_returns_annualized <- port_returns_wide 
  


```

# Slide 14 Performance Evaluation: New vs. Base Overall Strategy Return Summary

Need: Mean, St.Dev, Max number of Observations, T Statistic, Sharpe Ratio, Correlation

```{r echo=FALSE}

slide14_data <- port_returns_annualized %>% 
  select(DATE,RET_V1_Combined, RET_V2_Combined) %>% 
  mutate(Base = RET_V1_Combined,
         New = RET_V2_Combined,
         NewSubBase = RET_V2_Combined-RET_V1_Combined)  

slide14_table <- slide14_data %>% 
  summarise(
    across(c(Base, New, NewSubBase), list(
      Mean = ~ mean(.x, na.rm = TRUE),
      StDev = ~ sd(.x, na.rm = TRUE),
      Max = ~ max(.x, na.rm = TRUE),
      Min = ~ min(.x, na.rm = TRUE),
      Obs = ~ sum(!is.na(.x)),
      TStat = ~ mean(.x, na.rm = TRUE) / (sd(.x, na.rm = TRUE) / sqrt(sum(!is.na(.x)))),
      Sharpe = ~ mean(.x, na.rm = TRUE) / sd(.x, na.rm = TRUE)
    )),
    Correlation = cor(Base, New, use = "complete.obs")
  )

summary_table_14 <- slide14_table %>%
  pivot_longer(everything(), names_to = c("Column", "Metric"), names_sep = "_", values_to = "Value") %>%
  pivot_wider(names_from = Column, values_from = Value)

summary_table_14 %>% 
   gt() %>% 
  cols_label(
    NewSubBase = "New - Base"
  ) %>%
  fmt_percent(
    columns = where(is.numeric), # Apply only to numeric columns
    rows = Metric %in% c("Mean", "StDev", "Max", "Correlation"), # Filter only Mean, StDev, and Max
    decimals = 2
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Sharpe", "TStat"), 
    decimals = 3 # Adjust to desired decimal places
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Obs"), 
    decimals = 0 # Adjust to desired decimal places
  ) 



```

# Slide 15 New vs. Base Overall Strategy Return Dynamics

```{r echo=FALSE}

Slide15_Data <- slide14_data %>% 
  select(DATE, Base, New) %>% 
  pivot_longer(cols = c(Base, New),
               names_to = "Portfolio",
               values_to = "Returns")


ggplot(Slide15_Data, aes(x = as.Date(DATE), y = Returns, color = Portfolio, group = Portfolio)) +
  geom_line(size = 1) + 
  labs(title = "Base vs. New Portfolio Returns Over Time",
       subtitle = "Annualized Monthly Returns",
       x = "Date",
       y = "Returns %",
       color = "Portfolio") +
  theme_minimal() +
  scale_x_date(date_labels = "%Y-%m", date_breaks = "1 year") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +  # Converts y-axis to percentage

  theme(legend.position = "top",
  axis.text.x = element_text(angle = 45, hjust = 1)
  )


```

# Slide 17 New vs Base Long

```{r echo=FALSE}

slide17_data <- port_returns_annualized %>% 
  select(DATE,RET_LongPosV1, RET_LongPosV2) %>% 
  mutate(BaseLong = RET_LongPosV1,
         NewLong = RET_LongPosV2,
         NewSubBaseLong = RET_LongPosV2-RET_LongPosV1)  

slide17_table <- slide17_data %>% 
  summarise(
    across(c(BaseLong, NewLong, NewSubBaseLong), list(
      Mean = ~ mean(.x, na.rm = TRUE),
      StDev = ~ sd(.x, na.rm = TRUE),
      Max = ~ max(.x, na.rm = TRUE),
      Min = ~ min(.x, na.rm = TRUE),
      Obs = ~ sum(!is.na(.x)),
      TStat = ~ mean(.x, na.rm = TRUE) / (sd(.x, na.rm = TRUE) / sqrt(sum(!is.na(.x)))),
      Sharpe = ~ mean(.x, na.rm = TRUE) / sd(.x, na.rm = TRUE)
    )),
    Correlation = cor(BaseLong, NewLong, use = "complete.obs")
  )

summary_table_17 <- slide17_table %>%
  pivot_longer(everything(), names_to = c("Column", "Metric"), names_sep = "_", values_to = "Value") %>%
  pivot_wider(names_from = Column, values_from = Value)

summary_table_17 %>% 
  gt() %>% 
  cols_label(
    BaseLong = "Base Long",
    NewLong = "New Long",
    NewSubBaseLong = "New Long -  Base Long"
    
  ) %>%
  fmt_percent(
    columns = where(is.numeric), 
    rows = Metric %in% c("Mean", "StDev", "Max", "Correlation"), 
    decimals = 2
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Sharpe", "TStat"), 
    decimals = 3 
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Obs"), 
    decimals = 0 
  ) 




```

# Slide 17 Visual

```{r echo=FALSE}

Slide17_Data <- slide17_data %>% 
  select(DATE, BaseLong, NewLong) %>% 
  pivot_longer(cols = c(BaseLong, NewLong),
               names_to = "Portfolio",
               values_to = "Returns")


ggplot(Slide17_Data, aes(x = as.Date(DATE), y = Returns, color = Portfolio, group = Portfolio)) +
  geom_line(size = 1) + 
  labs(title = "Base Long vs. New Long Portfolio Returns Over Time",
       subtitle = "Annualized Monthly Returns",
       x = "Date",
       y = "Returns %",
       color = "Portfolio") +
  theme_minimal() +
  scale_x_date(date_labels = "%Y-%m", date_breaks = "1 year") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +  

  theme(legend.position = "top",
  axis.text.x = element_text(angle = 45, hjust = 1)
  )


```

# Slide 18: New vs. Base Short Side Return Summary Statistics & Hypothesis Test

```{r echo=FALSE}
slide18_data <- port_returns_annualized %>% 
  select(DATE,RET_ShortPosV1, RET_ShortPosV2) %>% 
  mutate(BaseShort = RET_ShortPosV1,
         NewShort = RET_ShortPosV2,
         NewSubBaseShort = RET_ShortPosV2-RET_ShortPosV1)  

slide18_table <- slide18_data %>% 
  summarise(
    across(c(BaseShort, NewShort, NewSubBaseShort), list(
      Mean = ~ mean(.x, na.rm = TRUE),
      StDev = ~ sd(.x, na.rm = TRUE),
      Max = ~ max(.x, na.rm = TRUE),
      Min = ~ min(.x, na.rm = TRUE),
      Obs = ~ sum(!is.na(.x)),
      TStat = ~ mean(.x, na.rm = TRUE) / (sd(.x, na.rm = TRUE) / sqrt(sum(!is.na(.x)))),
      Sharpe = ~ mean(.x, na.rm = TRUE) / sd(.x, na.rm = TRUE)
    )),
    Correlation = cor(BaseShort, NewShort, use = "complete.obs")
  )

summary_table_18 <- slide18_table %>%
  pivot_longer(everything(), names_to = c("Column", "Metric"), names_sep = "_", values_to = "Value") %>%
  pivot_wider(names_from = Column, values_from = Value)

summary_table_18 %>% 
  gt() %>%
  cols_label(
    
    BaseShort = "Base Short",
    NewShort = "New Short",
    NewSubBaseShort = "New - Base"
  ) %>%
  
  fmt_percent(
    columns = where(is.numeric), 
    rows = Metric %in% c("Mean", "StDev", "Max", "Correlation"), 
    decimals = 2
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Sharpe", "TStat"), 
    decimals = 3 
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Obs"), 
    decimals = 0 
  ) 





```

# Slide 18 Visual

```{r echo=FALSE}

Slide18_Data <- slide18_data %>% 
  select(DATE, BaseShort, NewShort) %>% 
  pivot_longer(cols = c(BaseShort, NewShort),
               names_to = "Portfolio",
               values_to = "Returns")


ggplot(Slide18_Data, aes(x = as.Date(DATE), y = Returns, color = Portfolio, group = Portfolio)) +
  geom_line(size = 1) + 
  labs(title = "Base Short vs. New Short Portfolio Returns Over Time",
       subtitle = "Annualized Monthly Returns",
       x = "Date",
       y = "Returns %",
       color = "Portfolio") +
  theme_minimal() +
  scale_x_date(date_labels = "%Y-%m", date_breaks = "1 year") +
    scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +  

  theme(legend.position = "top",
  axis.text.x = element_text(angle = 45, hjust = 1)
  )


```

# Slide 21 Table (Im Confused)

```{r echo=FALSE}
slide21_data_IVOL <- port_df_wide %>%
  select(DATE, IVOL_LongPosV1, IVOL_LongPosV2, IVOL_ShortPosV1, IVOL_ShortPosV2) %>%
  mutate(Year = year(DATE), Month = month(DATE)) %>%  
  filter(Month == 12) %>%  
  group_by(Year) %>% 
  slice_tail(n = 1) %>%  #
  ungroup()

slide21_summary_table <- slide21_data_IVOL %>%
  select(IVOL_LongPosV1,IVOL_LongPosV2, IVOL_ShortPosV1, IVOL_ShortPosV2) %>% 
  rename_with(~ str_remove(.x, "IVOL_"), starts_with("IVOL_")) %>% 
  summarise(
    across(
      c(LongPosV1, LongPosV2, ShortPosV1, ShortPosV2), 
      list(
        Mean = ~ mean(.x, na.rm = TRUE),
        StDev = ~ sd(.x, na.rm = TRUE),
        Max = ~ max(.x, na.rm = TRUE),
        Min = ~ min(.x, na.rm = TRUE)
      )
    )
  ) %>%
  pivot_longer(
    cols = everything(), 
    names_to = c("Column", "Metric"), 
    names_sep = "_", 
    values_to = "Value"
  ) %>%
  pivot_wider(
    names_from = Column, 
    values_from = Value
  )


slide21_summary_table %>%
  gt() %>%cols_label(
    LongPosV1 = "Base IVOL Long",
    LongPosV2 = "New IVOL Long",
    ShortPosV1 = "Base IVOL Short",
    ShortPosV2 = "New IVOL Short"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2 
  )
```

```{r echo=FALSE}
slide21_data_SKEW <- port_df_wide %>%
  select(DATE, SKEW_LongPosV1,SKEW_LongPosV2,SKEW_ShortPosV1,SKEW_ShortPosV2) %>%
  mutate(Year = year(DATE), Month = month(DATE)) %>%  
  filter(Month == 12) %>%  
  group_by(Year) %>% 
  slice_tail(n = 1) %>%  
  ungroup()

slide21_summary_table_SKEW <- slide21_data_SKEW %>% 
  select(SKEW_LongPosV1,SKEW_LongPosV2,SKEW_ShortPosV1,SKEW_ShortPosV2) %>% 
  rename_with(~ str_remove(.x, "SKEW_"), starts_with("SKEW_")) %>% 
  summarise(
    across(
      c(LongPosV1, LongPosV2, ShortPosV1, ShortPosV2), 
      list(
        Mean = ~ mean(.x, na.rm = TRUE),
        StDev = ~ sd(.x, na.rm = TRUE),
        Max = ~ max(.x, na.rm = TRUE),
        Min = ~ min(.x, na.rm = TRUE)
      )
    )
  ) %>%
  pivot_longer(
    cols = everything(), 
    names_to = c("Column", "Metric"), 
    names_sep = "_", 
    values_to = "Value"
  ) %>%
  pivot_wider(
    names_from = Column, 
    values_from = Value
  )

slide21_summary_table_SKEW %>%
  gt() %>%
  cols_label(
    LongPosV1 = "Base Skew Long",
    LongPosV2 = "New Skew Long",
    ShortPosV1 = "Base Skew Short",
    ShortPosV2 = "New  Skew Short"
  ) %>%
  
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2 
  )
```

# Slide 23

```{r echo=FALSE}

symbol <- "SPY"
start_date <- "2007-01-31"
end_date <- "2022-12-31"

spy_data <- tq_get(symbol, from = start_date, to = end_date)

spy_monthly_returns <- spy_data %>%
  tq_transmute(select = adjusted, 
               mutate_fun = periodReturn, 
               period = "monthly", 
               type = "log") %>% 
  mutate(SPY.RETURNS = monthly.returns)
```

```{r echo=FALSE}

rf_symbol <- "DGS3MO"  

start_date <- "2007-01-31"
end_date <- "2022-12-30"

rf_data <- tq_get(rf_symbol, from = start_date, to = end_date, get = "economic.data")

rf_monthly <- rf_data %>%
  mutate(date = as.Date(date)) %>%
  group_by(year = format(date, "%Y"), month = format(date, "%m")) %>%
  slice_tail(n = 1) %>%  
  ungroup() %>%
  select(date, price) %>%
  rename(rf.rate = price)

rf_monthly <- rf_monthly %>%
  mutate(rf.rate = (rf.rate / 100) / 12)  


```

```         
```

Merge

```{r echo=FALSE}

##
BenchIVOL_df <- read.csv("https://raw.githubusercontent.com/boykowealth/TailRiskPremium_PortfolioConcept/refs/heads/main/FINAL_NOT_SUCKY.csv", colClasses = c("date" = "character")) %>% 
  mutate(date = as.Date(zoo::as.yearmon(date, "%Y%m"), frac = 1),
         hi20 = hi20 / 100,
         lo20 = lo20 / 100,
         fammaPort = (hi20 + lo20) / 2
         ) %>% 
  dplyr::select(date, fammaPort)

##

slide14_data <- slide14_data %>% mutate(date = as.Date(DATE))
spy_monthly_returns <- spy_monthly_returns %>% mutate(date = as.Date(date))
rf_monthly <- rf_monthly %>% mutate(date = as.Date(date))

slide14_selected <- slide14_data %>% select(date, New, Base)
spy_selected <- spy_monthly_returns %>% select(date, SPY.RETURNS)
rf_selected <- rf_monthly %>% select(date, rf.rate)

slide23_data <- slide14_selected %>%
  left_join(spy_selected, by = "date") %>%
  left_join(rf_selected, by = "date")

slide23_data <- slide23_data %>% 
  dplyr::left_join(BenchIVOL_df, by = "date")

# Compute Summary Stats
slide23_summary <- slide23_data %>% 
  summarise(
    across(c(New, Base, fammaPort, SPY.RETURNS, rf.rate), list(
      Mean = ~ mean(.x, na.rm = TRUE),
      StDev = ~ sd(.x, na.rm = TRUE),
      Max = ~ max(.x, na.rm = TRUE),
      Min = ~ min(.x, na.rm = TRUE),
      Obs = ~ sum(!is.na(.x)),
      TStat = ~ mean(.x, na.rm = TRUE) / (sd(.x, na.rm = TRUE) / sqrt(sum(!is.na(.x)))),
      Sharpe = ~ mean(.x, na.rm = TRUE) / sd(.x, na.rm = TRUE)
    ))
  )

# Add Correlation rows manually
correlations <- slide23_data %>%
  summarise(
    Base = cor(New, Base, use = "complete.obs"),
    fammaPort = cor(New, fammaPort, use = "complete.obs"),
    SPY.RETURNS = cor(New, SPY.RETURNS, use = "complete.obs"),
    rf.rate = cor(New, rf.rate, use = "complete.obs"),
    New = 1  # Perfect correlation with self
  ) %>%
  pivot_longer(everything(), names_to = "Column", values_to = "Value") %>%
  mutate(Metric = "Correlation")

# Calculate difference stats vs. New
diff_stats <- slide23_data %>%
  summarise(
    across(c(Base, fammaPort, SPY.RETURNS, rf.rate), 
           list(
             DiffMean = ~ mean(New - .x, na.rm = TRUE),
             DiffTStat = ~ {
               diff <- New - .x
               mean(diff, na.rm = TRUE) / (sd(diff, na.rm = TRUE) / sqrt(sum(!is.na(diff))))
             }
           ), .names = "{.col}_{.fn}")
  ) %>%
  pivot_longer(everything(), 
               names_to = c("Column", "Metric"), 
               names_sep = "_", 
               values_to = "Value") %>%
  mutate(Metric = case_when(
    Metric == "DiffMean" ~ "Mean of Difference w.r.t. New",
    Metric == "DiffTStat" ~ "T-Stat of Difference w.r.t. New"
  )) %>%
  pivot_wider(names_from = Column, values_from = Value)

# Tidy + Pivot for GT table
summary_table_23 <- slide23_summary %>%
  pivot_longer(everything(), names_to = c("Column", "Metric"), names_sep = "_", values_to = "Value") %>%
  bind_rows(correlations) %>% 
  pivot_wider(names_from = Column, values_from = Value)
summary_table_23 <- bind_rows(summary_table_23, diff_stats)

summary_table_23 %>% 
  gt() %>% 
  cols_label(
    New = "New Strategy",
    Base = "Base Strategy",
    fammaPort = "Fama-French Benchmark",
    SPY.RETURNS = "S&P 500 Returns",
    rf.rate = "Risk-Free Rate"
  ) %>% 
  fmt_percent(
    columns = where(is.numeric), 
    rows = Metric %in% c("Mean", "StDev", "Max", "Correlation", "Mean of Difference w.r.t. New"), 
    decimals = 2
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Sharpe", "TStat", "T-Stat of Difference w.r.t. New"), 
    decimals = 3 
  ) %>% 
  fmt_number(
    columns = where(is.numeric), 
    rows = Metric %in% c("Obs"), 
    decimals = 0 
  ) 


```